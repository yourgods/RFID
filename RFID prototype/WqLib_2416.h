/*********************************************************************************************
文件名称：        WqLib_2416.h
出处：            Copyright (c) 广州微嵌计算机科技有限公司.  All rights reserved.
作用以及说明：    微嵌单板电脑 组态软件 中间库
版本号：          V1.00
作者：
修改人及日期：    广州微嵌 2011-7-04
修改记录：        
***********************************************************************************************/
#ifndef WQLIB_2416_H__
#define WQLIB_2416_H__

#define DLLEXPORT	__declspec(dllexport)
#define EXTERNC		extern "C"

/*********************************************************************************************
函数名称：RebootHot
功    能：重启设备(热启动,启动快)
输入参数：无
输出参数：无
返    回：无
***********************************************************************************************/
EXTERNC DLLEXPORT void RebootHot(void);

/*********************************************************************************************
函数名称：RE_BOOT(冷启动,启动慢)
功    能：重启设备
输入参数：无
输出参数：无
返    回：无
***********************************************************************************************/
EXTERNC DLLEXPORT void RE_BOOT(void);  


/*********************************************************************************************
函数名称： Turn_Light
功    能： 关背光和开背光(或者关闭VGA输出与打开VGA输出)
输入参数： on_off=0关背光;  on_off=1 开背光
输出参数： 无
返    回： 无
***********************************************************************************************/
EXTERNC DLLEXPORT void Turn_Light(int on_off);


/*********************************************************************************************
函数名称： Turn_Beep 不推荐使用，应该使用BeepOnce
功    能： 关蜂鸣器和开蜂鸣器(大部分版本在Turn_Beep(1), 短延时,Turn_Beep(0),响一次)。
输入参数： on_off=0关蜂鸣器;  on_off=1 蜂鸣器鸣叫 
输出参数： 无
返    回： 无
***********************************************************************************************/
EXTERNC DLLEXPORT void Turn_Beep(int on_off);


/*********************************************************************************************
函数名称： BeepOnce
功    能： 调用后，蜂鸣器响一次(注意如果连续调用，请至少延时Sleep(120)。120ms)
输入参数： bVer：0版本1，1版本2；版本1和2针对硬件，如果1不响，请使用版本2。新版的自动识别，bVer可为任意，
输出参数： 无
返    回： 无
***********************************************************************************************/
EXTERNC DLLEXPORT void BeepOnce(BOOL bVer);

/*********************************************************************************************
函数名称： Beep
说    明： 注意：某些型号可能不支持（5.6寸、8寸的S3C2416单板电脑不支持该函数）
功    能： 仿照PC的Beep函数，以不同的频率，不同时间鸣叫。例Beep(200, 1000); //持续1s的报警音
输入参数： dwFrequency: 频率（3 ~ 20 000Hz）
           dwSoundDelay：使用上面的频率鸣叫的时间，ms为单位
输出参数： 无
返    回： 无
***********************************************************************************************/
EXTERNC DLLEXPORT void Beep(DWORD dwFrequency, DWORD dwSoundDelay);

/*********************************************************************************************
函数名称： SetMemoryDiv
功    能： 分配存储内存(RAM文件系统占用)和程序内存的比例
           如分配存储内存为5M字节：SetMemoryDiv(0x500000/0x1000);0x1000是页的大小
输入参数： dwStorePages: 存储内存大小，以page为单位。
输出参数： 无
返    回： TRUE or FALSE
***********************************************************************************************/
EXTERNC DLLEXPORT int SetMemoryDiv(DWORD dwStorePages);


/*********************************************************************************************
函数名称： GetMemoryDiv
功    能： 读取存储内存和程序内存的比例，和页的大小。
输入参数： 无
输出参数： lpdwStorePages：输出存储内存大小，页为单位
           lpdwRamPages:   输出程序内存大小，页为单位
           lpdwPageSize:   页大小
返    回： TRUE or FALSE
***********************************************************************************************/
EXTERNC DLLEXPORT int GetMemoryDiv(LPDWORD lpdwStorePages, LPDWORD lpdwRamPages, LPDWORD lpdwPageSize);



/*********************************************************************************************
函数名称： SetUartFifo
功    能： 设置各个串口接收FIFO中断触发字节数，1字节触发时，用于实时接收串口的每个字节。
输入参数： dwSize: 0:1字节触发；1:8字节；2:16字节；3:32字节，其他值错误
           dwCOM：1的时候对应COM1；2对应COM2；3 COM3；4 COM4，其他值错误
输出参数： 无
注    意： 打开串口后，用该函数进行设置。不设置时候默认是8字节触发。一般不需再设置。
返    回： TRUE or FALSE；FALSE时候主要是参数错误导致
***********************************************************************************************/
EXTERNC DLLEXPORT BOOL SetUartFifo(DWORD dwSize, DWORD dwCOM);

#endif